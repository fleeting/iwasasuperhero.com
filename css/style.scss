@import "normalize";
@import "mixins";
@import "foundation";

/* structure */

.row.full-width {
  width: 100%;
  max-width: 100%;
}

.wrap {
  position: relative;
  width: 100%;
}

/* header */
[role="banner"] {
  height: 35%;
  min-height: 245px;
  background: url(http://farm8.staticflickr.com/7033/6732960045_cd855ae430_o.jpg) no-repeat center center;
  background-size: cover;

  h1 {
    text-align: center;
    margin: 0 0 0 4rem;
    background: rgba(0, 0, 0, 0.4);
    color: #f1f1f1;
    width: 315px;
  }
}


/*
 * Sidebar
 *
 * The sidebar is the drawer, the item we are toggling with our handy hamburger
 * button in the corner of the page.
 *
 * This particular sidebar implementation was inspired by Chris Coyier's
 * "Offcanvas Menu with CSS Target" article, and the checkbox variation from the
 * comments by a reader. It modifies both implementations to continue using the
 * checkbox (no change in URL means no polluted browser history), but this uses
 * `position` for the menu to avoid some potential content reflow issues.
 *
 * Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504
 */

/* Style and "hide" the sidebar */
.menu {
  position: fixed;
  top: 0;
  bottom: 0;
  left: -17rem;
  width: 17rem;
  visibility: hidden;
  overflow-y: auto;
  font-size: .75rem; /* 14px */
  color: rgba(255,255,255,.6);
  background-color: #007095;
  -webkit-transition: all .3s ease-in-out;
          transition: all .3s ease-in-out;
}

/* Sidebar content */
.menu a {
  font-size: 1.3em;
  font-weight: normal;
  color: #fff;
}
.menu-item {
  padding: 1.5rem;
}
.menu-item p:last-child {
  margin-bottom: 0;
}

/* Sidebar nav */
.menu-nav {
  border-bottom: 1px solid rgba(255,255,255,.1);
}
.menu-nav-item {
  display: block;
  padding: .5rem 1.5rem;
  border-top: 1px solid rgba(255,255,255,.1);
}
.menu-nav-item.active,
a.menu-nav-item:hover,
a.menu-nav-item:focus {
  text-decoration: none;
  background-color: rgba(255,255,255,.1);
  border-color: transparent;
}

/* Hide the sidebar checkbox that we toggle with `.sidebar-toggle` */
.menu-checkbox {
  display: none;
}

/* Style the `label` that we use to target the `.sidebar-checkbox` */
.menu-toggle {
  position: fixed;
  top:  1rem;
  left: 1rem;
  display: block;
  width: 2.25rem;
  padding: .6rem .65rem;
  color: #505050;
  background-color: #fff;
  border-radius: 4px;
  cursor: pointer;
}
.menu-toggle:before {
  display: block;
  content: "";
  width: 100%;
  padding-bottom: .15rem;
  border-top-width: .40rem;
  border-bottom-width: .15rem;
  border-top: .375rem double;
  border-bottom: .125rem solid;

  /* Make the border inside the box */
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

.menu-toggle:active,
#menu-checkbox:checked ~ .menu-toggle {
  color: #fff;
  background-color: #505050;
}

/* Slide effect
 *
 * Handle the sliding effects of the sidebar and content in one spot, seperate
 * from the default styles.
 *
 * As an a heads up, we don't use `transform: translate3d()` here because when
 * mixed with `position: fixed;` for the sidebar toggle, it creates a new
 * containing block. Put simply, the fixed sidebar toggle behaves like
 * `position: absolute;` when transformed.
 *
 * Read more about it at http://meyerweb.com/eric/thoughts/2011/09/12/.
 */

.wrap, .menu, .menu-toggle {
  -webkit-backface-visibility: hidden;
      -ms-backface-visibility: hidden;
          backface-visibility: hidden;
}
.wrap, .menu-toggle {
  -webkit-transition: -webkit-transform .3s ease-in-out;
          transition: transform .3s ease-in-out;
}

#menu-checkbox:checked + .menu {
  visibility: visible;
}
#menu-checkbox:checked ~ .menu, #menu-checkbox:checked ~ .wrap, #menu-checkbox:checked ~ .menu-toggle {
  -webkit-transform: translateX(17rem);
      -ms-transform: translateX(17rem);
          transform: translateX(17rem);
}

/* main */
[role="main"] {
  padding-top: 35px;
  background: #fff;
}

article {
  margin-bottom: 25px;
  padding-bottom: 25px;

  .meta-linked {
    margin-bottom: 8px;
    white-space: nowrap;
    overflow: hidden;

    span {
      padding: 4px;
      color: #fff;
      font-size: 0.8em;
      text-transform: uppercase;
      background: #ea44a5;
    }

    a {
      color: #ea44a5;
    }

    a:after {
      content: "";
      pointer-events: none;
      position: absolute;
      width: 95%;
      height: 25px;
      top: 0;
      right: 0;
      background-image: -webkit-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
      background-image: -moz-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
      background-image: -ms-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
      background-image: -o-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
      background-image: linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
    }

    // &:hover {
    //   white-space: normal;
    // }
  }

  .meta-readingtime {
    margin: 0;
    text-align: right;
    font-size: 0.9em;
    color: #666;
  }

  time {
    background: #ea44a5;
    text-align: right;
    margin-bottom: 10px;
    padding: 4px 6px;
    color: #fff;
    float: right;
  }

  h2 {
    line-height: 1.0;
  }

  .meta-tags {
    clear: both;
    text-align: right;
  }

  .article-content {
    a {
      color: #ea44a5;
    }

    a:hover {
      color: shade(#ea44a5, 10%);
      text-decoration: underline;
    }

    a.button {
      color: #fff;
    }
  }
}

/* left sidebar */
[role="complementary"] {
  padding-top: 35px;

  .avatar {
    width: 80px;
    border-radius: 150px;
    max-width: 100px;
    min-width: 50px;
    float: left;
    margin: 6px 10px 0 0;
  }

  p, ul, ol {
    font-size: 0.8em;
    line-height: 1.4;
  }

  h2 {
    display: inline-block;
    float: right;
    padding: 4px 6px;
    color: #fff;
    font-size: 1em;
    background: #007095;
  }

  .aside-section {
    clear: both;
  }

  .social {
  	margin: 0 auto 25px;
  	width: 176px;
  }

  .social li {
  	list-style: none;
  	display: inline-block;
  }

  .pin-item {
  	background: none;
  	background: rgba(234, 68, 165, 0.07);
  	margin: 0 0 5px;
    padding: 10px;
    opacity: 0.6;
  	-webkit-transition: all 0.20s ease-in;
  }

  .pin-item:hover {
  	opacity: 1;
  	-webkit-transition: all 0.20s ease-in;
  }

  .pin-item p {
  	margin-bottom: 0;
  }

  .pin-description {
  	color: #777;

  }

  .pin-tag {
  	display: none;
  }
}

/* right sidebar */
.meta-sidebar {
  padding-top: 35px;
}

/* footer */
[role="contentinfo"] {

}

/* misc */
.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.cf {
  @include clearfix();
}

.show {
  display: block;
}

/* Hide from browsers */
.hide, [hidden] {
  display: none;
}

/* Hide from browsers & screenreaders */
.hidden {
  display: none !important;
  visibility: hidden;
}

/* Hide from browsers, available to screenreaders */
.visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/* Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard: h5bp.com/p */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/* Hide from browsers & screenreaders, maintain layout */
.invisible {
  visibility: hidden;
}

/* The Kellum Method */
.hide-text {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

::-moz-selection {
  background: #62aaf2;
  color:#fff;
  text-shadow: none;
}

::selection {
  background:#62aaf2;
  color:#fff;
  text-shadow: none;
}
